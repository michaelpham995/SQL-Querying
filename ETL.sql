--1
--The two tables have ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, ZIP in common.
DROP SEQUENCE USER_ID_SEQ;
DROP TABLE PATRON_DW;
DROP VIEW BOOK_CLUB_SIGNUP_VIEW;
DROP VIEW PATRON_VIEW;

--2
CREATE SEQUENCE USER_ID_SEQ
START WITH 1 INCREMENT BY 1;

CREATE TABLE PATRON_DW
(
USER_ID     NUMBER     ,
DATA_SOURCE VARCHAR(4),
FIRST_NAME  VARCHAR(50)  NOT NULL,
LAST_NAME   VARCHAR(50)  NOT NULL,
EMAIL       VARCHAR(50)  UNIQUE     NOT NULL,
ZIP         CHAR(13)      NOT NULL,
PHONE       CHAR(12)     NOT NULL,
CONSTRAINT  PK_ID_SOURCE    PRIMARY KEY(USER_ID, DATA_SOURCe)
);

--3
CREATE VIEW BOOK_CLUB_SIGNUP_VIEW AS
SELECT BOOK_CLUB_SIGNUP_ID AS USER_ID, 'CLUB' AS DATA_SOURCE, BC_FIRST_NAME AS FIRST_NAME,
BC_LAST_NAME AS LAST_NAME, BC_EMAIL AS EMAIL,
SUBSTR(BC_PHONE, 2,3) || '-' || SUBSTR(BC_PHONE, 6,8) AS PHONE
, BC_ZIP_CODE AS ZIP
FROM BOOK_CLUB_SIGNUP;

CREATE VIEW PATRON_VIEW AS
SELECT PATRON_ID AS USER_ID, 'PATR' AS DATA_SOURCE, FIRST_NAME, LAST_NAME, EMAIL, PHONE, ZIP
FROM PATRON;

SELECT *
FROM BOOK_CLUB_SIGNUP_VIEW;

SELECT * 
FROM PATRON_VIEW;


--4/5/6 combined below



CREATE OR REPLACE PROCEDURE USER_ETC_PROC 
AS
BEGIN

    INSERT INTO PATRON_DW
    SELECT bcv.USER_ID, bcv.DATA_SOURCE, bcv.FIRST_NAME,
    bcv.LAST_NAME, bcv.EMAIL, bcv.PHONE, bcv.ZIP
    FROM BOOK_CLUB_SIGNUP_VIEW bcv LEFT JOIN PATRON_DW dw
        ON bcv.USER_ID = dw.USER_ID AND bcv.DATA_SOURCE = dw.DATA_SOURCE
    WHERE dw.USER_ID IS NULL;

 
    INSERT INTO PATRON_DW
    SELECT pv.USER_ID, pv.DATA_SOURCE, pv.FIRST_NAME,
    pv.LAST_NAME, pv.EMAIL, pv.PHONE, pv.ZIP
    FROM PATRON_VIEW pv LEFT JOIN PATRON_DW dw
        ON pv.USER_ID = dw.USER_ID AND pv.DATA_SOURCE = dw.DATA_SOURCE
    WHERE dw.USER_ID IS NULL AND dw.DATA_SOURCE IS NULL;
    
    MERGE INTO PATRON_DW dw
    USING BOOK_CLUB_SIGNUP_VIEW bcv
    ON (dw.USER_ID = bcv.USER_ID AND dw.DATA_SOURCE = bcv.DATA_SOURCE)
    WHEN MATCHED THEN
    UPDATE SET  
                dw.FIRST_NAME = bcv.FIRST_NAME, 
                dw.LAST_NAME = bcv.LAST_NAME,
                dw.EMAIL = bcv.EMAIL,
                dw.PHONE = bcv.PHONE,
                dw.ZIP = bcv.ZIP;
                
    MERGE INTO PATRON_DW dw
    USING PATRON_VIEW pw    
    ON (dw.USER_ID = pw.USER_ID AND dw.DATA_SOURCE = pw.DATA_SOURCE)
    WHEN MATCHED THEN
    UPDATE SET  
                dw.FIRST_NAME = pw.FIRST_NAME, 
                dw.LAST_NAME = pw.LAST_NAME,
                dw.EMAIL = pw.EMAIL,
                dw.PHONE = pw.PHONE,
                dw.ZIP = pw.ZIP;
    

END;
/

CALL USER_ETC_PROC();


