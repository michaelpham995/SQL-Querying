--1
SET SERVEROUTPUT ON;

DECLARE
    COUNT_HOLDS     NUMBER;
BEGIN   
    SELECT COUNT(HOLD_ID) 
    INTO COUNT_HOLDS
    FROM PATRON_TITLE_HOLDS pth INNER JOIN TITLE t ON pth.TITLE_ID = t.TITLE_ID
    WHERE GENRE = 'FAN';
    
    IF COUNT_HOLDS > 4 THEN
    DBMS_OUTPUT.PUT_LINE('More than 4 Fantasy titles have holds on them.');
    ELSE 
    DBMS_OUTPUT.PUT_LINE('4 or less Fantasy titles have holds on them.');
    END IF;
END;
/

--DELETE FROM PATRON_TITLE_HOLDS
--WHERE HOLD_ID IN
 --   (SELECT HOLD_ID FROM PATRON_TITLE_HOLDS pth INNER JOIN TITLE t 
 --   ON pth.TITLE_ID = t.TITLE_ID
 --   WHERE PATRON_ID = 20 AND GENRE = 'FAN');
ROLLBACK;


--2
SET DEFINE ON;
DECLARE
    COUNT_HOLDS     NUMBER;
    GENRE_TYPE      TITLE.GENRE%TYPE;
BEGIN   
    GENRE_TYPE := &GENRE;
    
    SELECT COUNT(HOLD_ID), t.GENRE
    INTO COUNT_HOLDS, GENRE_TYPE
    FROM PATRON_TITLE_HOLDS pth 
        INNER JOIN TITLE t ON pth.TITLE_ID = t.TITLE_ID
    WHERE T.GENRE = GENRE_TYPE
    GROUP BY T.GENRE;
    
    IF COUNT_HOLDS > 4 THEN
    DBMS_OUTPUT.PUT_LINE('There are at least 4 holds on ' || GENRE_TYPE || ' titles. Actual count = ' ||COUNT_HOLDS);
    ELSE 
    DBMS_OUTPUT.PUT_LINE('There are 4 or less holds on '|| GENRE_TYPE || ' titles. Actual count = ' ||COUNT_HOLDS);
    END IF;
END;
/

--3
DECLARE
    CURSOR PATRON_PHONE_CURSOR IS 
        SELECT PHONE_ID, PATRON_ID, PHONE_TYPE, PHONE
        FROM PATRON_PHONE;
        PHONE_ROW PATRON_PHONE%ROWTYPE;
BEGIN
    FOR PHONE_ROW IN PATRON_PHONE_CURSOR LOOP
        IF (PHONE_ROW.PATRON_ID = 2) THEN
            UPDATE PATRON_PHONE
            SET PHONE = '555-123-4567', PHONE_TYPE = 'mobile'
            WHERE PATRON_ID = PHONE_ROW.PATRON_ID;
            DBMS_OUTPUT.PUT_LINE('1 row was inserted into the patron_phone table.');
        END IF;
    END LOOP;
EXCEPTION 
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Row was not inserted. Unexpected exception occurred');
    
END;
/


--4 
CREATE OR REPLACE PROCEDURE INSERT_PHONE
(
    PATRON_ID_PARAM     PATRON_PHONE.PATRON_ID%TYPE,
    PHONE_TYPE_PARAM    PATRON_PHONE.PHONE_TYPE%TYPE,
    PHONE_PARAM         PATRON_PHONE.PHONE%TYPE
)
AS
BEGIN
    INSERT INTO PATRON_PHONE
        VALUES(PHONE_ID_SEQ.nextval, PATRON_ID_PARAM, PHONE_TYPE_PARAM, PHONE_PARAM); 
COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

CALL INSERT_PHONE (2, 'work', '512-987-6543');
BEGIN
    INSERT_PHONE(2, 'fax', '512-321-1234');
END;
/


--5
DECLARE 
    TYPE TITLE_TABLE IS TABLE OF VARCHAR2(50);
    TITLE_NAMES  TITLE_TABLE;
BEGIN
    SELECT DISTINCT TITLE
        BULK COLLECT INTO TITLE_NAMES
        FROM TITLE 
        WHERE GENRE IN 'FIC'
        ORDER BY TITLE;
    FOR i IN 1..TITLE_NAMES.COUNT LOOP
            DBMS_OUTPUT.PUT_LINE('Fiction title '|| i || ': ' || TITLE_NAMES(i));         
    END LOOP;
END;
/

--6
DECLARE
    CURSOR TITLE_AUTHOR_CURSOR IS
        SELECT DISTINCT t.TITLE, a.FIRST_NAME, a.LAST_NAME
        FROM TITLE t
            INNER JOIN TITLE_AUTHOR_LINKING tal ON t.TITLE_ID = tal.TITLE_ID
            INNER JOIN AUTHOR A ON TAL.AUTHOR_ID = A.AUTHOR_ID
        WHERE GENRE = 'FIC'
        ORDER BY TITLE;
        ta_row TITLE%ROWTYPE;
BEGIN
    FOR TA_ROW IN TITLE_AUTHOR_CURSOR LOOP
        DBMS_OUTPUT.PUT_LINE(ta_ROW.FIRST_NAME || ' ' || TA_ROW.LAST_NAME || 'wrote the book ' || TA_ROW.TITLE);
    END LOOP;
END;
/

    
--7
CREATE OR REPLACE FUNCTION COUNT_HOLDS
(
    TITLE_ID_PARAM  TITLE.TITLE_ID%TYPE
)
RETURN NUMBER
AS
    HOLD_COUNT_VAR  NUMBER;
BEGIN 
    SELECT COUNT(HOLD_ID)
    INTO HOLD_COUNT_VAR
    FROM PATRON_TITLE_HOLDS
    WHERE TITLE_ID = TITLE_ID_PARAM;
    RETURN HOLD_COUNT_VAR;
END;
/

SELECT TITLE, COUNT_HOLDS(TITLE_ID)
FROM TITLE;

    
    
    
